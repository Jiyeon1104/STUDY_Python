1. 알고리즘이란
- 문제나 과제를 해결하기 위한 처리 절차를 구체적인 순서로 표현한 아이디어 또는 생각
- 알고리즘 자체는 일상 생활에서도 많이 사용하고 있음
- 요리의 레시피, 음악의 악보, 가전제품 사용 설명서 등
- 문자, 기호, 일러스트 등으로 나타냄

2. 알고리즘과 프로그램
- 알고리즘을 프로그래밍 언어로 기술하면 프로그램이 됨
- 프로그래밍 언어(파이썬, 자바, 씨 등)는 컴퓨터에 지시하기 위한 인공 언어임

3. 프로그램 작성에서의 알고리즘
- 프로그램 작성은 기획, 설계(*), 프로그래밍, 디버그로 진행함
- 알고리즘은 설계단계에서 필요함

4. 좋은 알고리즘이란
- 알기 쉬움 (이해하기 쉬움)
- 속도가 빠름
- 효율적 (메모리를 작게 사용)
- 재이용이 용이 (객체지향프로그래밍의 특징)

5. 왜 알고리즘을 공부해야 하는가
- 좋은 프로그램을 만들기 위해 (좋은 프로그램 : 빠르고 효율적이며 범용성이 있는 프로그램)
- 프로그램의 좋고 나쁨을 판단하기 위해
- 프로그램 작성 과정 전체를 효율화하기 위해
- 프로그램 기술을 향상시키기 위해

6. 알고리즘의 조건
- 정확한 결과를 얻을 수 있어야 함
  (알고리즘은 문제나 과제를 해결하기 위한 절차)
- 반드시 종료되어야 함
  (중간 처리나 절차가 잘못 만들어지면 영원히 끝나지 않음 - 무한루프)

7. 알고리즘의 기본형 3가지
- 순차 구조 : 처음부터 순서대로 처리하는 절차
  Ex. 1) 슈퍼마켓에 감 > 2) 라면을 삼 > 3) 집으로 돌아감
  실행을 원하는 처리를 위로부터 순서대로 작성함
  제일 간단하고 가장 많이 사용됨
 
 - 선택 구조 : 조건식으로 판단해 실행할 절차를 전환하는 구조

 - 반복 구조 : 조건을 만족하는 동안 같은 처리를 반복하는 절차

// 의사코드 pseudo code
1. 순차 구조
 - 슈퍼마켓에 감
 - 라면을 삼
 - 집으로 돌아옴

2. 선택 구조
 - 슈퍼마켓에 감
 - 라면의 존재 여부 
   있으면! 라면, 없으면! 떡 
 - 집으로 돌아옴

3. 반복 구조
 - 슈퍼마켓에 감
 - 라면의 존재 여부
      있으면 라면, 없으면 떡
   거스름 돈이 500원보다 많음
      붕어빵을 삼
 - 집으로 돌아옴

// 1. 삼각형의 면적을 계산하는 알고리즘

삼각형의 면적 = 밑변 * 높이 / 2

의사코드로 작성

 - 밑변과 높이를 입력
 - area <- base * height / 2
 - area 출력

플로우차트로 작성

코드로 작성

// 2. 두 데이터의 대소를 판단하는 알고리즘

의사코드로 작성
 - a,b 데이터 입력
 - a > b
     a 출력
   a < b
     b 출력
   a = b
     a와 b는 같다 출력